<script setup lang="ts">
#if($queryInputNumberColumns.size() > 0 )
import { ref } from 'vue';
#end
#set( $t = '$t' )
import { $t } from '@/locales';

defineOptions({
    name: '${className}Search'
});

#if($queryDictColumns.length() > 0 )
/**
 * 父组件传递参数
 */
interface Props {
  /** 字典Map */
  dictMap: Record<string, DictApi.Dict[]>;
}

/**
 * 调用父组件传递参数
 */
const props = defineProps<Props>();

#end
/**
 * 父组件方法
 */
interface Emits {
    (e: 'reset'): void;
    (e: 'search'): void;
}

/**
 * 调用父组件方法
 */
const emit = defineEmits<Emits>();

/**
 * 模型类型
 */
const model = defineModel<${className}Api.${className}SearchParams>('model', { required: true });

#if($queryInputNumberColumns.size() > 0)
/** 数字输入框字段特殊处理 */
#foreach($column in $queryInputNumberColumns)
const ${column.attrName}InputNumber = ref<number | null>(null);
#end

#end
/**
 * 重置
 */
function reset() {
  emit('reset');
}

/**
 * 查询
 */
function search() {
    emit('search');
}
</script>

<template>
  <NCard :title="$t('common.search')" :bordered="false" size="small" class="card-wrapper">
    <NForm :model="model" label-placement="left" :label-width="80">
      <NGrid responsive="screen" item-responsive>
#foreach($column in $queryColumns)
#set($label = "$t('page.#if($hasMenu)${menu.routeName}.#end${classname}.${column.attrName}')")
#set($placeholder = "$t('page.#if($hasMenu)${menu.routeName}.#end${classname}.form.${column.attrName}')")
        <NFormItemGi
          label-width="120px"
          span="24 s:12 m:6"
          :label="${label}"
          path="${column.attrName}"
          class="pr-24px"
        >
#if($column.components == "INPUT" || $column.components == "TEXTAREA")
          <NInput v-model:value="model.${column.attrName}" :placeholder="${placeholder}" />
#elseif($column.components == "INPUT-NUMBER")
#if($column.isNumber)
          <NInputNumber v-model:value="model.${column.attrName}" class="w-full" :placeholder="${placeholder}" />
#else
          <NInputNumber
              v-model:value="${column.attrName}InputNumber"
              class="w-full"
              :placeholder="${placeholder}"
              @update:value="val => {
                model.${column.attrName} = val ? val.toString() : null;
              }"
          />
#end
#elseif($column.components == "SELECT")
            <NSelect
              v-model:value="model.${column.attrName}"
              filterable
              clearable
#if($column.dictCode)
              label-field="dictName"
              value-field="dictValue"
              :options="props.dictMap.${column.dictCode}"
#else
              :options="[]"
#end
              :placeholder="${placeholder}"
            />
#elseif($column.components == "CASCADER")
            <NCascader
              v-model:value="model.${column.attrName}"
#if($column.dictCode)
              label-field="dictName"
              value-field="dictValue"
              :options="props.dictMap.${column.dictCode}"
#else
              :options="[]"
#end
              show-path
              clearable
              filterable
              :placeholder="${placeholder}"
            />
#elseif($column.components == "TREE-SELECT")
            <NTreeSelect
              v-model:value="model.${column.attrName}"
              :placeholder="${placeholder}"
              checkable
              clearable
              filterable
#if($column.dictCode)
              label-field="dictName"
              key-field="dictValue"
              :options="props.dictMap.${column.dictCode}"
#else
              :options="[]"
#end
            />
#elseif($column.components == "CHECKBOX")
#set( $result = "model.${column.attrName}" )
#if($column.queryType == 'IN')
#set( $result = "model.${column.attrName}InList" )
#elseif($column.queryType == 'NOT_IN')
#set( $result = "model.${column.attrName}NotInList" )
#end

            <SmartCheckbox
               v-model:value="${result}"
               model="array"
#if($column.dictCode)
               :options="props.dictMap.${column.dictCode}"
               :field-name="{ key: 'id', value: 'dictValue', label: 'dictName' }"
#end
            />
#elseif($column.components == "RADIO")
            <NRadioGroup v-model:value="model.${column.attrName}">
#if($column.dictCode)
              <NRadio
                v-for="item in props.dictMap.${column.dictCode}"
                :key="item.id || ''"
                :value="item.dictValue || ''"
                :label="item.dictName || ''"
              />
#else
              <NRadio value="" label="" />
#end
            </NRadioGroup>
#elseif($column.components == "DATEPICKER")
#if($column.queryType == 'BETWEEN')
            <SmartRangePicker
              v-model:value="model.${column.attrName}BetweenList"
              type="date"
              :start-placeholder="$t('page.#if($hasMenu)${menu.routeName}.#end${classname}.form.${column.attrName}Map.start')"
              :end-placeholder="$t('page.#if($hasMenu)${menu.routeName}.#end${classname}.form.${column.attrName}Map.end')"
            />
#else
            <NDatePicker
              v-model:formatted-value="model.${column.attrName}"
              value-format="yyyy-MM-dd HH:mm:ss"
              class="w-100%"
              :placeholder="${placeholder}"
              type="datetime"
              clearable
            />
#end
#elseif($column.components == "TIMEPICKER")
            <NTimePicker
              v-model:formatted-value="model.${column.attrName}"
              value-format="HH:mm:ss"
              class="w-100%"
              :placeholder="${placeholder}"
              clearable
            />
#elseif($column.components == "SWITCH")
            <NSwitch :value="model.${column.attrName} === '1'" @update:value="val => { model.${column.attrName} = val ? '1' : '0' }" />
#end
        </NFormItemGi>
#end
#set( $res = 24-(($queryColumns.size()%4) *6))
        <NFormItemGi span="24 s:12 m:$res">
          <NSpace class="w-full" justify="end">
            <NButton @click="reset">
              <template #icon>
                <icon-ic-round-refresh class="text-icon" />
              </template>
              {{ $t('common.reset') }}
            </NButton>
            <NButton type="primary" ghost @click="search">
              <template #icon>
                <icon-ic-round-search class="text-icon" />
              </template>
              {{ $t('common.search') }}
            </NButton>
          </NSpace>
        </NFormItemGi>
      </NGrid>
    </NForm>
  </NCard>
</template>

<style scoped></style>
