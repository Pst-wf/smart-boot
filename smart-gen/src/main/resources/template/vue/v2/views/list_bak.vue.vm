<template>
  <page-header-wrapper
      :breadcrumb="customBreadcrumb ? {
      props: {
        routes: customRoutes,
        itemRender: defaultItemRender
      }
    } : null">
    <a-card :bordered="false">
      <div class="table-page-search-wrapper">
        <a-form layout="inline">
          <a-row :gutter="48">
#foreach ($column in $queryColumns)
#if(${velocityCount} == 3)
            <template v-if="advanced">
#end
            <a-col :md="8" :sm="24">
              <a-form-item label="${column.comments}">
#if($column.components == "INPUT")
                <a-input v-model="queryParam.${column.attrName}" placeholder="请输入${column.comments}"/>
#elseif($column.components == "INPUT-NUMBER")
                <a-input-number v-model="queryParam.${column.attrName}" placeholder="请输入${column.comments}"/>
#elseif($column.components == "SELECT")
                <a-select allowClear placeholder="请选择${column.comments}" v-model="queryParam.${column.attrName}">
#if($column.dictCode)
                  <a-select-option v-for="(value, key) in dictMap['${column.dictCode}']" :key="key">{{ value.value }}</a-select-option>
#end
                </a-select>
#end
              </a-form-item>
            </a-col>
#if(${velocityCount} > 2 && ${velocityCount} == ${queryColumns.size()})
            </template>
#end
#end
            <span class="table-page-search-submitButtons" :style="advanced && { float: 'right', overflow: 'hidden', marginRight: '2%'} || {} ">
              <a-button type="primary" @click="$refs.table.refresh(true)">查询</a-button>
              <a-button style="margin-left: 8px" @click="() => this.queryParam = {}">重置</a-button>
#if(${queryColumns.size()} > 2)
              <a @click="toggleAdvanced" style="margin-left: 8px">
                {{ advanced ? '收起' : '展开' }}
                <a-icon :type="advanced ? 'up' : 'down'"/>
              </a>
#end
            </span>
          </a-row>
        </a-form>
      </div>

      <div class="table-operator">
        <a-button v-if="!permissions || permissions.indexOf('${pathName}:add') > -1" type="primary" icon="plus" @click="add">新建</a-button>
        <a-dropdown v-if="selectedRowKeys.length > 0">
          <a-menu slot="overlay">
            <a-menu-item v-if="!permissions || permissions.indexOf('${pathName}:delete') > -1" key="1" @click="remove(null)" ><a-icon type="delete" />删除</a-menu-item>
          </a-menu>
          <a-button style="margin-left: 8px">
            批量操作 <a-icon type="down" />
          </a-button>
        </a-dropdown>
      </div>
      <my-table
        ref="table"
        size="default"
        rowKey="id"
        :columns="columns"
        :data="loadData"
        :rowSelection="rowSelection"
        showPagination="true"
      >
        <span slot="serial" slot-scope="text, record, index">
            {{ index + 1 }}
        </span>
#foreach ($column in $listColumns)
#if($column.dictCode)
        <span slot="${column.attrName}" slot-scope="text">
          {{ dictMap['$column.dictCode'] === undefined ? '': dictMap['$column.dictCode'][text] ? dictMap['$column.dictCode'][text].value : '' }}
        </span>
#end
#end
        <span slot="action" slot-scope="text, record">
          <template>
            <a class="btnCss" @click="edit(record, true)">查看</a>
            <a v-if="!permissions || permissions.indexOf('${pathName}:update') > -1" class="btnCss" @click="edit(record, false)">编辑</a>
            <a-popconfirm title="请确认是否删除？" @confirm="() => remove(record)">
              <a v-if="!permissions || permissions.indexOf('${pathName}:delete') > -1" class="btnCss">删除</a>
            </a-popconfirm>
          </template>
        </span>
      </my-table>
    </a-card>
  </page-header-wrapper>
</template>

<script>
  import moment from 'moment'
  import { MyTable, Ellipsis } from '@/components'
  import { get${className}Page, remove } from '@/api/${classnameLowerCase}'
#if(${listDictColumns} && ${listDictColumns.length()} > 0)
  import { initDict } from '@/utils/dictUtil'
#end
  // import { exportFile } from '@/utils/exportFile'

  const columns = [
    {
        title: '序号',
        scopedSlots: { customRender: 'serial' }
    },
#foreach ($column in $listColumns)
#if($column.dictCode)
    {
      title: '${column.comments}',
      dataIndex: '${column.attrName}',
      scopedSlots: { customRender: '${column.attrName}' },
      sorter: true
    },
#else
    {
      title: '${column.comments}',
      dataIndex: '${column.attrName}',
      sorter: true
    },
#end
#end
    {
        title: '操作',
        width: '250px',
        scopedSlots: { customRender: 'action' }
    }
  ]

  export default {
    name: '${className}List',
    components: {
      Ellipsis,
      MyTable
    },
    data () {
      this.columns = columns
      return {
#if(${listDictColumns} && ${listDictColumns.length()} > 0)
        dictMap: {},
#end
        // 高级搜索 展开/关闭
        advanced: false,
        // 查询参数
        queryParam: {},
        // 加载数据方法 必须为 Promise 对象
        loadData: parameter => {
          const requestParameters = Object.assign({}, parameter, this.queryParam)
          return get${className}Page(requestParameters)
                  .then(res => {
                    return res.result
                  })
        },
        selectedRowKeys: [],
        selectedRows: [],
        permissions: [],
        customBreadcrumb: false,
        customRoutes: []
      }
    },
    created () {
      this.checkRoute()
      this.permissions = this.$route.meta.permission
#if(${listDictColumns} && ${listDictColumns.length()} > 0)
      this.dictMap = initDict('${listDictColumns}')
#end
    },
    computed: {
      rowSelection () {
        return {
          selectedRowKeys: this.selectedRowKeys,
          onChange: this.onSelectChange
        }
      }
    },
    methods: {
      // 验证是否需要重置面包屑
      checkRoute () {
${checkRoute}
      },
      // 自定义面包屑
      defaultItemRender (_ref) {
        const route = _ref.route
        const routes = _ref.routes
        const h = _ref.h
        return (
            (routes.indexOf(route) === routes.length - 1 && h('span', [route.title])) ||
            h(
                'router-link',
                {
                  attrs: {
                    to: {
                      path: route.path || '/'
                    }
                  }
                },
                [route.title]
            )
        )
      },
      // 新增
      add () {
${addRoute}
      },
      // 编辑
      edit (record, isRead) {
${editRoute}
      },
      // 删除
      remove (record) {
        let deleteIds = []
        if (record) {
          deleteIds = [record.id]
        } else {
          // 批量删除
          deleteIds = this.selectedRowKeys
        }
        remove({ deleteIds: deleteIds })
                .then(res => {
                  this.$refs.table.refresh()
                  this.$message.info('删除成功')
                })
      },
      // 批量选择
      onSelectChange (selectedRowKeys, selectedRows) {
        this.selectedRowKeys = selectedRowKeys
        this.selectedRows = selectedRows
      },
#if(${queryColumns.size()} > 2)
      // 展开/收起
      toggleAdvanced () {
        this.advanced = !this.advanced
      },
#end
      // 重置筛选项
      resetSearchForm () {
        this.queryParam = {
          date: moment(new Date())
        }
      }
    }
  }
</script>
