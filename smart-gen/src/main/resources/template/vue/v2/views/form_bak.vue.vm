<template>
  <page-header-wrapper>
    <a-card :bordered="false">
      <a-spin :spinning="loading">
        <a-form :form="form" v-bind="this.formLayout">
          <a-row class="form-row" :gutter="16" style="text-align: right">
            <a-space size="large" style="margin-right: 2%">
              <a-button key="cancel" @click="goBack">
                取消
              </a-button>
              <a-button
                  v-if="!isRead"
                  class="submitCss"
                  key="submit"
                  type="primary"
                  @click="submit()">
                保存
              </a-button>
            </a-space>
          </a-row>
          <a-card class="card" title="" :bordered="false">
#foreach ($column in $formColumns)
            <a-row class="form-row" :gutter="16">
              <a-col :lg="#if($column.rowStyle == '1')24#else 12#end" :md="#if($column.rowStyle == '1')24#else 12#end" :sm="24">
                <a-form-item#if($column.components == "HIDE") v-show="false"#end label="${column.comments}"#if($column.rowStyle == '1') class="fullLineCss"#end >
#if($column.components == "HIDE")
                  <a-input v-decorator="['${column.attrName}']" disabled />
#elseif($column.components == "INPUT")
                  <a-input v-decorator="['${column.attrName}'#if($column.isNotNull == "1"), {rules: [{required: true, message: '${column.comments}不能为空'}]}#end]" placeholder="请填写${column.comments}" :disabled="isRead" />
#elseif($column.components == "INPUT-NUMBER")
                  <a-input v-decorator="['${column.attrName}'#if($column.isNotNull == "1"), {rules: [{required: true, type: 'number', transform: (value) => Number(value), message: '请输入数字'}]}#end]" placeholder="请填写${column.comments}" :disabled="isRead" />
#elseif($column.components == "TEXTAREA")
                  <a-textarea
                    :rows="5"
                    id="${column.attrName}"
                    v-decorator="['${column.attrName}'#if($column.isNotNull == "1"), {rules: [{required: true, message: '${column.comments}不能为空'}]}#end]"
                    placeholder="请填写${column.comments}"
                    :disabled="isRead"
                  />
#elseif($column.components == "SELECT")
                  <a-select
                    allowClear
                    placeholder="请选择${column.comments}"
                    v-decorator="['${column.attrName}'#if($column.isNotNull == "1"), {rules: [{required: true, message: '${column.comments}不能为空'}]}#end]"
                    :disabled="isRead"
                  >
#if($column.dictCode)
                    <a-select-option v-for="(value, key) in dictMap['${column.dictCode}']" :key="key">{{ value.value }}</a-select-option>
#end
                  </a-select>
#elseif($column.components == "CASCADER")
                  <a-cascader
                    change-on-select
                    style="width: 100%"
                    placeholder="请选择${column.comments}"
                    :key="demoValue"
                    :value="demoValue"
                    :options="demoValue"
                    :disabled="isRead"
                  />
#elseif($column.components == "TREE-SELECT")
                  <a-tree-select
                    show-search
                    v-decorator="['${column.attrName}'#if($column.isNotNull == "1"), {rules: [{required: true, message: '${column.comments}不能为空'}]}#end]"
                    style="width: 100%"
                    :dropdown-style="{ maxHeight: '400px', overflow: 'auto' }"
                    placeholder="请选择${column.comments}"
                    allow-clear
                    tree-node-filter-prop="title"
                    :replaceFields="replaceFields"
                    :tree-data="demoValue"
                    :disabled="isRead"
                  >
                  </a-tree-select>
#elseif($column.components == "CHECKBOX")
                  <a-checkbox-group
                    v-decorator="['${column.attrName}'#if($column.isNotNull == "1"), {rules: [{required: true, message: '${column.comments}不能为空'}]}#end]"
                    :options="demoValue"
                    :disabled="isRead"
                  />
#elseif($column.components == "RADIO")
                  <a-radio-group
                    v-decorator="['${column.attrName}', {initialValue: ''}#if($column.isNotNull == "1"), {rules: [{required: true, message: '${column.comments}不能为空'}]}#end]"
                    buttonStyle="solid"
                    :options="demoValue"
                    :disabled="isRead"
                  />
#elseif($column.components == "DATEPICKER")
                  <a-date-picker
                    style="display: block"
                    v-decorator="['${column.attrName}'#if($column.isNotNull == "1"), {rules: [{required: true, message: '${column.comments}不能为空'}]}#end]"
                    show-time
                    format="#if($column.columnType == "datetime")YYYY-MM-DD HH:mm:ss#elseif($column.columnType == "date")YYYY-MM-DD#end"
                    placeholder="请选择${column.comments}"
                    :disabled="isRead"
                  />
#elseif($column.components == "TIMEPICKER")
                  <a-time-picker
                    v-decorator="['${column.attrName}'#if($column.isNotNull == "1"), {rules: [{required: true, message: '${column.comments}不能为空'}]}#end]"
                    format="HH:mm:ss"
                    placeholder="请选择${column.comments}"
                    :disabled="isRead"
                  />
#elseif($column.components == "SWITCH")
                  <a-switch
                    :defaultChecked="demoValue"
                    :disabled="isRead"
                  />
#elseif($column.components == "FILE-UPLOAD")
                  <FileUpload
                    ref="upload"
                    :multiple="false"
                    :visible="visible"
                    :disabled="isRead"
                    @changeLoading="changeLoading"
                    @updateValue="updateValue"
                  />
#end
                </a-form-item>
              </a-col>
            </a-row>
#end
          </a-card>
        </a-form>
      </a-spin>
    </a-card>
  </page-header-wrapper>
</template>

<style>
  .fullLineCss .ant-form-item-label{
    margin-left: -14.8%;
  }
  .fullLineCss .ant-form-item-control-wrapper{
    width: 77.4%;
  }
  .submitCss{
    background-color: #52c41a !important;
  }
</style>

<script>
import pick from 'lodash.pick'
import { save, update, getOne } from '@/api/${classnameLowerCase}'
#if($hasCascader)
import { Cascader } from 'ant-design-vue'
#end
#if($hasTreeSelect)
import { TreeSelect } from 'ant-design-vue'
#end
#if(${formDictColumns})
import { initDict } from '@/utils/dictUtil'
#end
#if(${uploadColumns} && ${uploadColumns.size()} >0)
import FileUpload from '@/components/Radish/FileUpload'
#end

// 表单字段
const fields = [#foreach($column in $formColumns)#if(${velocityCount} != ${formColumns.size()}) '${column.attrName}',#else '${column.attrName}' #end#end]

export default {
  components: {
#if($hasCascader)
    [Cascader.name]: Cascader,
#end
#if($hasTreeSelect)
    [TreeSelect.name]: TreeSelect,
    ATreeSelectNode: TreeSelect.TreeNode,
#end
#if(${uploadColumns} && ${uploadColumns.size()} >0)
    FileUpload
#end
  },
  data () {
    return {
      loading: false,
      dataId: null,
      operateType: null,
      isRead: false,
      model: {},
      formLayout: {
        labelCol: {
          xs: { span: 24 },
          sm: { span: 7 }
        },
        wrapperCol: {
          xs: { span: 24 },
          sm: { span: 13 }
        }
      },
#if(${uploadColumns} && ${uploadColumns.size()} >0)
      fileList: [],
#end
#if(${formDictColumns})
      dictMap: {},
#end
#if($hasTreeSelect)
      replaceFields: {
        children: '',
        title: '',
        key: '',
        value: ''
      },
#end
      demoValue: '',
      form: this.$form.createForm(this)
    }
  },
  created () {
    this.init()
  },
  methods: {
    // 初始化
    async init () {
      this.loading = true
      this.operateType = this.$route.query.operateType
      this.dataId = this.$route.query.id
      this.isRead = this.operateType === 'info'
#if(${formDictColumns})
      this.dictMap = initDict('${formDictColumns}')
#end
      if (this.operateType !== 'add' && this.dataId) {
        // 加载数据
        await this.getInfo(this.dataId)
      }
      // 表单注册
      this.setForm()
      this.loading = false
    },
    // 详情
    async getInfo (dataId) {
      await getOne({ id: dataId })
          .then(res => {
            this.model = res.result.data
          })
    },
    // 提交
    submit () {
      this.loading = true
      this.form.validateFields((errors, values) => {
        if (!errors) {
          if (values.id) {
            // 修改 e.g.
            update(values)
                .then(res => {
                  this.loading = false
                  // 重置表单数据
                  this.form.resetFields()
                  this.$message.info('修改成功')
                })
                .finally(() => {
                  this.loading = false
                  this.goBack()
                })
          } else {
            // 新增
            save(values)
                .then(res => {
                  this.loading = false
                  // 重置表单数据
                  this.form.resetFields()
                  this.$message.info('新增成功')
                })
                .finally(() => {
                  this.loading = false
                  this.goBack()
                })
          }
        } else {
          this.loading = false
        }
      })
    },
    // 表单注册
    setForm () {
      fields.forEach(v => this.form.getFieldDecorator(v))
      this.model && this.form.setFieldsValue(pick(this.model, fields))
    },
#if(${uploadColumns} && ${uploadColumns.size()} >0)
    updateValue (res) {
      const arr = []
      res.forEach(x => {
        arr.push(x.id)
      })
      this.model.fileIds = arr
      this.setForm()
    },
#end
    // 回到上一个路由
    goBack () {
      this.$router.go(-1)
    }
  }
}
</script>
